string shortestCommonSupersequence(string s1, string s2) {
       
        
        int l1=s1.size(),l2=s2.size();
	    vector<vector<int>>dp(l1+1,vector<int>(l2+1,0));
	    for(int i=0;i<=l1;i++)
	    dp[i][0]=0;
	     for(int i=0;i<=l2;i++)
	    dp[0][i]=0;
	    
	    for(int i=1;i<=l1;i++)
	    {
	        for(int j=1;j<=l2;j++)
	        {
	            if(s1[i-1]==s2[j-1])
	            {
	                dp[i][j]=1+dp[i-1][j-1];
	            }
	            else
	            dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
	            
	        }
	    }
	    
	   /* for(int i=0;i<=l1;i++)
	    {
	        for(int j=0;j<=l2;j++)
	        {
	            printf("%d ",dp[i][j]);
	        }
	        printf("\n");
	    }*/
	    int i=l1,j=l2;
	    string an="";
	    while(i>0&&j>0)
	    {
	        if(s1[i-1]==s2[j-1])
	        {
	            an+=s1[i-1];
	            i--;
	            j--;
	        }
	        else if(dp[i-1][j]>dp[i][j-1])
	        {
	            an+=s1[i-1];
	            i--;
	            
	        }
	        else
	        {
	            an+=s2[j-1];
	            j--;
	        }
	    }
        //if sonme string in s1 is left take it ;
       while(i>0)
       {
           an+=s1[i-1];
           i--;
       }
        //some string in s2 is left take it ;
        while(j>0)
        {
           an+=s2[j-1];
            j--;
        }
        reverse(an.begin(),an.end());
        return an;
    }
